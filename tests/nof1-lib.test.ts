import { AdministrationSchema } from '../src/entities/nof1Test';
import { generateAdministrationSchema } from '../src/utils/nof1-lib/lib';
import dayjs from 'dayjs';
import 'dayjs/locale/fr';
import localizedFormat from 'dayjs/plugin/localizedFormat';

dayjs.extend(localizedFormat);

describe('Nof1 lib - administrationSchema function', () => {
	const substances = [
		{
			name: 'Placebo',
			abbreviation: 'P',
			unit: 'ml',
			posology: {
				posology: [
					{
						day: 1,
						morning: 10,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
					{
						day: 2,
						morning: 20,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
					{
						day: 3,
						morning: 30,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
				],
				repeatLast: true,
			},
		},
		{
			name: 'Aspirine',
			abbreviation: 'A',
			unit: 'g',
			posology: {
				posology: [
					{
						day: 1,
						morning: 25,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
					{
						day: 2,
						morning: 50,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
					{
						day: 3,
						morning: 75,
						morningFraction: 1,
						noon: 0,
						noonFraction: 1,
						evening: 0,
						eveningFraction: 1,
						night: 0,
						nightFraction: 1,
					},
				],
				repeatLast: true,
			},
		},
	];

	it('should generate an administration schema correctly, without repetition', () => {
		const seq = ['P', 'A', 'P'];
		const schema = generateAdministrationSchema(substances, seq, 3, 3);
		let day = 0;
		const res: AdministrationSchema = [
			{
				day: day++,
				substance: 'Placebo',
				morning: 10,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 20,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 30,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 25,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 50,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 75,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 10,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 20,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 30,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
		];
		expect(JSON.stringify(schema)).toEqual(JSON.stringify(res));
		expect(schema).toEqual(res);
	});

	it('should generate an administration schema correctly, with repetition', () => {
		const seq = ['P', 'A', 'A'];
		const schema = generateAdministrationSchema(substances, seq, 3, 3);
		let day = 0;
		const res: AdministrationSchema = [
			{
				day: day++,
				substance: 'Placebo',
				morning: 10,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 20,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Placebo',
				morning: 30,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'ml',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 25,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 50,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 75,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 75,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 75,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
			{
				day: day++,
				substance: 'Aspirine',
				morning: 75,
				morningFraction: 1,
				noon: 0,
				noonFraction: 1,
				evening: 0,
				eveningFraction: 1,
				night: 0,
				nightFraction: 1,
				unit: 'g',
			},
		];
		expect(JSON.stringify(schema)).toEqual(JSON.stringify(res));
		expect(schema).toEqual(res);
	});
});
